// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/prgodlonton/stream-controller/internal (interfaces: Store)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockStore is a mock of Store interface
type MockStore struct {
	ctrl     *gomock.Controller
	recorder *MockStoreMockRecorder
}

// MockStoreMockRecorder is the mock recorder for MockStore
type MockStoreMockRecorder struct {
	mock *MockStore
}

// NewMockStore creates a new mock instance
func NewMockStore(ctrl *gomock.Controller) *MockStore {
	mock := &MockStore{ctrl: ctrl}
	mock.recorder = &MockStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStore) EXPECT() *MockStoreMockRecorder {
	return m.recorder
}

// AddStream mocks base method
func (m *MockStore) AddStream(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddStream", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddStream indicates an expected call of AddStream
func (mr *MockStoreMockRecorder) AddStream(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddStream", reflect.TypeOf((*MockStore)(nil).AddStream), arg0, arg1)
}

// GetStreams mocks base method
func (m *MockStore) GetStreams(arg0 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStreams", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStreams indicates an expected call of GetStreams
func (mr *MockStoreMockRecorder) GetStreams(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStreams", reflect.TypeOf((*MockStore)(nil).GetStreams), arg0)
}

// RemoveStream mocks base method
func (m *MockStore) RemoveStream(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveStream", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveStream indicates an expected call of RemoveStream
func (mr *MockStoreMockRecorder) RemoveStream(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveStream", reflect.TypeOf((*MockStore)(nil).RemoveStream), arg0, arg1)
}
